{"version":3,"sources":["webpack:///../src/hooks/useDataChart.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","style","border","padding","isMDXComponent"],"mappings":"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","file":"component---src-hooks-use-data-chart-mdx-2bf40995079bb7e3c308.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/react-use-analytics-api/react-use-analytics-api/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { UseDataChartExample } from '../__docz__/components/UseDataChartExample';\nimport { useDataChart } from './useDataChart';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1>useDataChart</h1>\n    <h2 {...{\n      \"id\": \"description\"\n    }}>{`Description`}</h2>\n    <p>{`This hook renders a `}<a parentName=\"p\" {...{\n        \"href\": \"https://developers.google.com/analytics/devguides/reporting/embed/v1/component-reference#datachart\"\n      }}>{`DataChart`}</a>{` on the page using the `}<a parentName=\"p\" {...{\n        \"href\": \"/react-use-analytics-api/useAnalyticsApi\"\n      }}>{`Google Analytics Embed API`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { useDataChart } from '@devboldly/react-use-analytics-api';\n`}</code></pre>\n    <p>{`In your function component:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`const query = {\n  ids: viewId,\n  'start-date': '28daysAgo',\n  'end-date': 'today',\n  metrics: 'ga:sessions',\n  dimensions: 'ga:date',\n};\nconst chart = {\n  container: 'my-chart-container',\n  type: 'BAR',\n  options: {\n    title: 'Sessions (28 Days)',\n  },\n};\nuseDataChart(gapi, query, chart);\n`}</code></pre>\n    <p>{`Provide the hook with with `}<a parentName=\"p\" {...{\n        \"href\": \"/react-use-analytics-api/useAnalyticsApi\"\n      }}><inlineCode parentName=\"a\">{`gapi`}</inlineCode></a>{`, a `}<a parentName=\"p\" {...{\n        \"href\": \"https://developers.google.com/analytics/devguides/reporting/core/v3/reference#q_summary\"\n      }}>{`query`}</a>{`, and a `}<a parentName=\"p\" {...{\n        \"href\": \"https://developers.google.com/analytics/devguides/reporting/embed/v1/component-reference#datachart\"\n      }}>{`chart`}</a>{`. See the `}<a parentName=\"p\" {...{\n        \"href\": \"https://developers.google.com/analytics/devguides/reporting/embed/v1/component-reference#datachart\"\n      }}>{`DataChart docs for the API`}</a>{` for more information.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`The user must be `}<a parentName=\"li\" {...{\n          \"href\": \"/react-use-analytics-api/useAuthorize\"\n        }}>{`authorized`}</a>{`.`}</li>\n      <li parentName=\"ul\">{`There must be a container on the page with the container ID specified in `}<inlineCode parentName=\"li\">{`chart`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`You can either provide a `}<inlineCode parentName=\"li\">{`viewId`}</inlineCode>{` directly, or use a `}<a parentName=\"li\" {...{\n          \"href\": \"/react-use-analytics-api/useViewSelector\"\n        }}>{`view selector`}</a>{` to allow the user to select one.`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"signature\"\n    }}>{`Signature`}</h2>\n    <p><inlineCode parentName=\"p\">{`useDataChart(gapi?: GoogleAnalyticsEmbedAPI, query: Query, chart: Chart) => void`}</inlineCode></p>\n    <h3 {...{\n      \"id\": \"arguments\"\n    }}>{`Arguments`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Argument`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`gapi`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`GoogleAnalyticsEmbedAPI`}</inlineCode>{` `}{`|`}{` `}<inlineCode parentName=\"td\">{`undefined`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The `}<a parentName=\"td\" {...{\n              \"href\": \"/react-use-analytics-api/useAnalyticsApi\"\n            }}>{`Google Analytics Embed API`}</a>{`. When `}<inlineCode parentName=\"td\">{`undefined`}</inlineCode>{`, this hook does nothing.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`query`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"https://developers.google.com/analytics/devguides/reporting/core/v3/reference#q_summary\"\n            }}><inlineCode parentName=\"a\">{`Query`}</inlineCode></a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The data `}<a parentName=\"td\" {...{\n              \"href\": \"https://developers.google.com/analytics/devguides/reporting/core/v3/reference#q_summary\"\n            }}>{`query`}</a>{` for the chart.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`chart`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"https://developers.google.com/analytics/devguides/reporting/embed/v1/component-reference#datachart\"\n            }}><inlineCode parentName=\"a\">{`Chart`}</inlineCode></a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The `}<a parentName=\"td\" {...{\n              \"href\": \"https://developers.google.com/analytics/devguides/reporting/embed/v1/component-reference#datachart\"\n            }}>{`chart`}</a>{` to render. This determines its appearance.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"return\"\n    }}>{`Return`}</h3>\n    <p><inlineCode parentName=\"p\">{`void`}</inlineCode>{` - The hook has no return.`}</p>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <p>{`The following example renders a chart using `}<a parentName=\"p\" {...{\n        \"href\": \"/react-use-analytics-api/useDataChart\"\n      }}><inlineCode parentName=\"a\">{`useDataChart`}</inlineCode></a>{`. `}</p>\n    <p>{`This includes the following:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Load the Google Analytics Embed API using `}<a parentName=\"li\" {...{\n          \"href\": \"/react-use-analytics-api/useAnalyticsApi\"\n        }}><inlineCode parentName=\"a\">{`useAnalyticsApi`}</inlineCode></a>{`.`}</li>\n      <li parentName=\"ul\">{`Authorize the user with a `}<a parentName=\"li\" {...{\n          \"href\": \"https://devboldly.github.io/react-analytics-charts/google-oauth-client-id\"\n        }}>{`Client ID`}</a>{` using `}<a parentName=\"li\" {...{\n          \"href\": \"/react-use-analytics-api/useAuthorize\"\n        }}><inlineCode parentName=\"a\">{`useAuthorize`}</inlineCode></a>{`.`}</li>\n      <li parentName=\"ul\">{`Show a view selector using `}<a parentName=\"li\" {...{\n          \"href\": \"/react-use-analytics-api/useViewSelector\"\n        }}><inlineCode parentName=\"a\">{`useViewSelector`}</inlineCode></a>{`.`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`This is how the user chooses which Analytics view ID to use for the data query. You can hardcode a view ID if you'd like.`}</li>\n        </ul></li>\n      <li parentName=\"ul\">{`Render the chart using `}<a parentName=\"li\" {...{\n          \"href\": \"/react-use-analytics-api/useDataChart\"\n        }}><inlineCode parentName=\"a\">{`useDataChart`}</inlineCode></a>{`.`}</li>\n      <li parentName=\"ul\">{`Provide a way to sign out using `}<a parentName=\"li\" {...{\n          \"href\": \"/react-use-analytics-api/useSignOut\"\n        }}><inlineCode parentName=\"a\">{`useSignOut`}</inlineCode></a>{`.`}</li>\n    </ul>\n    <blockquote>\n      <p parentName=\"blockquote\">{`🏁 This example fully demonstrates use of this library, including full authorization flow. You can use it as a starting point.`}</p>\n    </blockquote>\n    <div style={{\n      border: 'solid 2px #67788a',\n      padding: '20px'\n    }}>\n  <UseDataChartExample mdxType=\"UseDataChartExample\" />\n    </div>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import * as React from 'react';\nimport {\n  useAnalyticsApi,\n  useAuthorize,\n  useDataChart,\n  useSignOut,\n  useViewSelector,\n} from '@devboldly/react-use-analytics-api';\n\nexport function UseDataChartExample() {\n  const { ready, gapi, authorized, error } = useAnalyticsApi();\n  const [viewId, setViewId] = React.useState();\n  const viewSelectorContainerId = 'view-selector-container';\n  useViewSelector(authorized ? gapi : undefined, viewSelectorContainerId, viewId => setViewId(viewId));\n  const query = {\n    ids: viewId,\n    'start-date': '28daysAgo',\n    'end-date': 'today',\n    metrics: 'ga:sessions',\n    dimensions: 'ga:date',\n  };\n  const chart = {\n    container: 'data-chart-container',\n    type: 'LINE',\n    options: {\n      title: 'Sessions (28 Days)',\n    },\n  };\n  useDataChart(authorized ? gapi : undefined, query, chart);\n\n  // Workaround for API limitation - see useAuthorize docs\n  const authDiv = React.useRef(null);\n  const [authorizeCalled, setAuthorizeCalled] = React.useState(false);\n  const hasAuthElements = authDiv.current && authDiv?.current?.children?.length > 0;\n\n  const authorize = useAuthorize(gapi, {\n    clientId,\n    container: 'authorize-container-id',\n  });\n  const signOut = useSignOut(gapi);\n\n  React.useEffect(() => {\n    if (ready && !error && !authorizeCalled) {\n      authorize();\n      setAuthorizeCalled(true);\n    }\n  }, [ready, error, authorizeCalled, authorize]);\n\n  return (\n    <div>\n      {!ready && <div>Loading...</div>}\n      {ready && (\n        <div>\n          {authorized && (\n            <div>\n              <div style={{ marginTop: '30px' }}>\n                <div className=\"data-chart\" id=\"data-chart-container\" />\n              </div>\n              <div id={viewSelectorContainerId} />\n              <div>\n                <button onClick={() => signOut()}>Sign Out</button>\n              </div>\n            </div>\n          )}\n          {!authorized && (\n            <div>\n              <div ref={authDiv} id=\"authorize-container-id\"></div>\n              {!hasAuthElements && <div>🔄 Refresh the page to sign in.</div>}\n            </div>\n          )}\n        </div>\n      )}\n      {error && <div>{error.toString()}</div>}\n    </div>\n  );\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}