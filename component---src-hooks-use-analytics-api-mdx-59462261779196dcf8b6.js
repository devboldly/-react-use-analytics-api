(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{lQLR:function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return l})),a.d(t,"default",(function(){return s}));a("1c7q"),a("abGl"),a("gZHo"),a("Fdmb"),a("Ir+3"),a("2mQt");var n=a("/FXl"),r=a("TjRS"),o=a("cG8f");a("aD51");function i(){return(i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e}).apply(this,arguments)}var l={};void 0!==l&&l&&l===Object(l)&&Object.isExtensible(l)&&!l.hasOwnProperty("__filemeta")&&Object.defineProperty(l,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/hooks/useAnalyticsApi.mdx"}});var b={_frontmatter:l},p=r.a;function s(e){var t=e.components,a=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,["components"]);return Object(n.b)(p,i({},b,a,{components:t,mdxType:"MDXLayout"}),Object(n.b)("h1",null,"useAnalyticsApi"),Object(n.b)("h2",{id:"description"},"Description"),Object(n.b)("p",null,"Use this hook to load and access the ",Object(n.b)("a",i({parentName:"p"},{href:"https://ga-dev-tools.appspot.com/embed-api/"}),"Google Analytics Embed API")," (",Object(n.b)("inlineCode",{parentName:"p"},"gapi"),")."),Object(n.b)("p",null,"The hook will run the ",Object(n.b)("a",i({parentName:"p"},{href:"https://developers.google.com/analytics/devguides/reporting/embed/v1/getting-started#step-2"}),"library loading script from Google"),", grab the API out from ",Object(n.b)("inlineCode",{parentName:"p"},"window.gapi")," (where Google loads it to), and store it as a singleton.\nIt will reference the singleton thereafter, keeping ",Object(n.b)("inlineCode",{parentName:"p"},"window")," interaction to a minimum. "),Object(n.b)("p",null,"State changes that happen outside of React (such as API readiness and ",Object(n.b)("a",i({parentName:"p"},{href:"/useAuthorize"}),"authorization"),") are synchronized across all hooks via a singleton emitter effect. This allows you to use the hook in multiple places while keeping them all in sync."),Object(n.b)("h2",{id:"usage"},"Usage"),Object(n.b)("pre",null,Object(n.b)("code",i({parentName:"pre"},{className:"language-jsx"}),"import { useAnalyticsApi } from '@devboldly/react-use-analytics-api';\n")),Object(n.b)("p",null,"Then in your function component: "),Object(n.b)("pre",null,Object(n.b)("code",i({parentName:"pre"},{className:"language-jsx"}),"const { ready, gapi, authorized, error } = useAnalyticsApi();\n")),Object(n.b)("p",null,"When ",Object(n.b)("inlineCode",{parentName:"p"},"ready")," is ",Object(n.b)("inlineCode",{parentName:"p"},"true"),", the ",Object(n.b)("inlineCode",{parentName:"p"},"gapi")," object will be set to the loaded and ready-to-use ",Object(n.b)("a",i({parentName:"p"},{href:"https://ga-dev-tools.appspot.com/embed-api/"}),"Google Analytics Embed API"),". The ",Object(n.b)("inlineCode",{parentName:"p"},"gapi")," object will be ",Object(n.b)("inlineCode",{parentName:"p"},"undefined")," until it is ready to use."),Object(n.b)("p",null,"The ",Object(n.b)("inlineCode",{parentName:"p"},"authorized")," property will be ",Object(n.b)("inlineCode",{parentName:"p"},"true")," when the user is authorized, ",Object(n.b)("inlineCode",{parentName:"p"},"false")," otherwise. If you authorize via the ",Object(n.b)("a",i({parentName:"p"},{href:"/useAuthorize"}),Object(n.b)("inlineCode",{parentName:"a"},"useAuthorize"))," hook, this property will be updated for all ",Object(n.b)("inlineCode",{parentName:"p"},"useAnalyticsApi")," hooks. Otherwise, it will be set to the last known value when the hook was instantiated."),Object(n.b)("p",null,"If something goes wrong, ",Object(n.b)("inlineCode",{parentName:"p"},"error")," will tell you what happened."),Object(n.b)("h3",{id:"using-the-api-itself"},"Using The API Itself"),Object(n.b)("p",null,"Changes via the ",Object(n.b)("inlineCode",{parentName:"p"},"gapi")," API happen outside of the React ecosystem and often need to occur after rendering is completed.\nFor instance, when ",Object(n.b)("a",i({parentName:"p"},{href:"/useDataChart"}),"rendering a chart")," via the API, content is injected directly into a DOM element. That DOM element must be fully rendered or else you'll get an error."),Object(n.b)("p",null,"Therefore, any time you interact with ",Object(n.b)("inlineCode",{parentName:"p"},"gapi"),", it should be ",Object(n.b)("a",i({parentName:"p"},{href:"https://reactjs.org/docs/hooks-effect.html"}),"treated as a side-effect"),"."),Object(n.b)("p",null,"For convenience, this library includes several helper hooks for common tasks that simplify safe API usage:"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",i({parentName:"li"},{href:"/useAuthorize"}),"useAuthorize")," - ",Object(n.b)("a",i({parentName:"li"},{href:"https://developers.google.com/analytics/devguides/reporting/embed/v1/component-reference#auth"}),"Authorize")," the user"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",i({parentName:"li"},{href:"/useViewSelector"}),"useViewSelector")," - Render an Analytics ",Object(n.b)("a",i({parentName:"li"},{href:"https://developers.google.com/analytics/devguides/reporting/embed/v1/component-reference#viewselector"}),"ViewSelector")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",i({parentName:"li"},{href:"/useDataChart"}),"useDataChart")," - Render a ",Object(n.b)("a",i({parentName:"li"},{href:"https://developers.google.com/analytics/devguides/reporting/embed/v1/component-reference#datachart"}),"DataChart")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",i({parentName:"li"},{href:"/useSignOut"}),"useSignOut")," - Sign the user out")),Object(n.b)("p",null,"If you need to do anything with the API outside of these operations, be sure to ",Object(n.b)("a",i({parentName:"p"},{href:"https://reactjs.org/docs/hooks-effect.html"}),"use an effect")," and do cleanup where appropriate."),Object(n.b)("h2",{id:"signature"},"Signature"),Object(n.b)("p",null,Object(n.b)("inlineCode",{parentName:"p"},"useAnalyticsApi() => { ready: boolean; gapi?: GoogleAnalyticsEmbedAPI; authorized: boolean; error?: Error; }")),Object(n.b)("h3",{id:"arguments"},"Arguments"),Object(n.b)("p",null,"The hook takes no arguments."),Object(n.b)("h3",{id:"return"},"Return"),Object(n.b)("p",null,"The hook returns an object containing:"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",i({parentName:"tr"},{align:null}),"Property"),Object(n.b)("th",i({parentName:"tr"},{align:null}),"Type"),Object(n.b)("th",i({parentName:"tr"},{align:null}),"Description"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:null}),"ready"),Object(n.b)("td",i({parentName:"tr"},{align:null}),"boolean"),Object(n.b)("td",i({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"true")," when the Google Analytics Embed API is ready to use, ",Object(n.b)("inlineCode",{parentName:"td"},"false")," otherwise.")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:null}),"gapi"),Object(n.b)("td",i({parentName:"tr"},{align:null}),Object(n.b)("a",i({parentName:"td"},{href:"https://developers.google.com/analytics/devguides/reporting/embed/v1"}),"GoogleAnalyticsEmbedAPI")," ","|"," undefined"),Object(n.b)("td",i({parentName:"tr"},{align:null}),"The ",Object(n.b)("a",i({parentName:"td"},{href:"https://ga-dev-tools.appspot.com/embed-api/"}),"Google Analytics Embed API"),". This will be ",Object(n.b)("inlineCode",{parentName:"td"},"undefined")," until the analytics API is fully loaded and ready.")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:null}),"authorized"),Object(n.b)("td",i({parentName:"tr"},{align:null}),"boolean"),Object(n.b)("td",i({parentName:"tr"},{align:null}),Object(n.b)("inlineCode",{parentName:"td"},"true")," if the user is authorized, ",Object(n.b)("inlineCode",{parentName:"td"},"false")," otherwise. If you authorize via the ",Object(n.b)("a",i({parentName:"td"},{href:"/useAuthorize"}),Object(n.b)("inlineCode",{parentName:"a"},"useAuthorize"))," hook, this property will be updated for all ",Object(n.b)("inlineCode",{parentName:"td"},"useAnalyticsApi")," hooks. Otherwise, it will be set to the last known value when the hook was instantiated.")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",i({parentName:"tr"},{align:null}),"error"),Object(n.b)("td",i({parentName:"tr"},{align:null}),Object(n.b)("a",i({parentName:"td"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error"}),"Error")," ","|"," undefined"),Object(n.b)("td",i({parentName:"tr"},{align:null}),"When not ",Object(n.b)("inlineCode",{parentName:"td"},"undefined"),", this indicates an error loading the API.")))),Object(n.b)("h2",{id:"example"},"Example"),Object(n.b)("p",null,"The following demonstrates loading the Google Analytics Embed API and showing whether the user is authorized."),Object(n.b)("p",null,"See the ",Object(n.b)("a",i({parentName:"p"},{href:"/useAuthorize#example"}),"useAuthorize hook example")," to test logging in and out, and see the ",Object(n.b)("a",i({parentName:"p"},{href:"/useDataChart#example"}),"useDataChart hook example")," for a full demo of everything this library offers."),Object(n.b)("div",{style:{border:"solid 2px #67788a",padding:"20px"}},Object(n.b)(o.a,{mdxType:"UseAnalyticsApiExample"})),Object(n.b)("pre",null,Object(n.b)("code",i({parentName:"pre"},{className:"language-jsx"}),"import * as React from 'react';\nimport { useAnalyticsApi } from '@devboldly/react-use-analytics-api';\n\nexport function UseAnalyticsApiExample() {\n  const { ready, gapi, authorized, error } = useAnalyticsApi();\n  if (error) {\n    console.error(error);\n  }\n  return (\n    <div>\n      {!error &&\n        (ready && !!gapi ? (\n          <>\n            <div>✔️ Loaded and ready to use!</div>\n            {authorized && <div>☀️ Logged into Google Analytics!</div>}\n            {!authorized && <div>🔐 Not logged into Google Analytics</div>}\n          </>\n        ) : (\n          <div>⌛ Loading...</div>\n        ))}\n      {error && (\n        <div>\n          <div style={{ fontSize: '120%' }}>❌ Error</div>\n          <hr style={{ border: 0, borderTop: 'solid 1px rosybrown' }} />\n          <p>{error.toString()}</p>\n          <p>See the console for more information.</p>\n        </div>\n      )}\n    </div>\n  );\n}\n")))}s&&s===Object(s)&&Object.isExtensible(s)&&!s.hasOwnProperty("__filemeta")&&Object.defineProperty(s,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/hooks/useAnalyticsApi.mdx"}}),s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-hooks-use-analytics-api-mdx-59462261779196dcf8b6.js.map