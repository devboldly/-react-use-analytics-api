{"version":3,"sources":["webpack:///../src/hooks/useSignOut.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"wPAQaA,G,UAAe,S,0MAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,oCACA,kBACE,GAAM,eADR,eAGA,4CAA2B,0BAAYC,WAAW,KAAvB,WAA3B,+EAA8J,iBAAGA,WAAW,IACxK,KAAQ,4CADkJ,8BAA9J,KAGA,kBACE,GAAM,SADR,SAGA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,gBADZ,yDAIL,oDACA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,gBADZ,wCAIL,8CAA6B,0BAAYA,WAAW,KAAvB,QAA7B,SAAuF,iBAAGA,WAAW,IACjG,KAAQ,4CAD2E,8BAAvF,UAEkD,0BAAYA,WAAW,KAAvB,WAFlD,0BAGA,kBACE,GAAM,aADR,aAGA,qBAAG,0BAAYA,WAAW,KAAvB,+DACH,kBACE,GAAM,aADR,aAGA,yBACE,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,YAGA,kBAAIA,WAAW,KACb,MAAS,MADX,QAGA,kBAAIA,WAAW,KACb,MAAS,MADX,iBAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,QAGA,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,2BAFH,YAEsF,0BAAYA,WAAW,MAAvB,cACtF,kBAAIA,WAAW,KACb,MAAS,MADX,OAEW,iBAAGA,WAAW,KACrB,KAAQ,4CADD,8BAFX,UAIkD,0BAAYA,WAAW,MAAvB,aAJlD,aAIsH,0BAAYA,WAAW,MAAvB,WAJtH,qBAQN,kBACE,GAAM,UADR,UAGA,qDAAoC,0BAAYA,WAAW,KAAvB,WAApC,KACA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,gBADZ,wBAIL,6BAAY,0BAAYA,WAAW,KAAvB,QAAZ,WAAwE,0BAAYA,WAAW,KAAvB,aAAxE,yBAAuJ,iBAAGA,WAAW,IACjK,KAAQ,iGACP,0BAAYA,WAAW,KAAvB,sBAFL,8CAGA,kBACE,GAAM,WADR,WAGA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,gBADZ,iiD,wMA2DTJ,EAAWK,gBAAiB","file":"component---src-hooks-use-sign-out-mdx-7eb7470f505e97ece089.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/react-use-analytics-api/react-use-analytics-api/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1>useSignOut</h1>\n    <h2 {...{\n      \"id\": \"description\"\n    }}>{`Description`}</h2>\n    <p>{`This hook returns a `}<inlineCode parentName=\"p\">{`signOut`}</inlineCode>{` function that can be used to sign the user out of Google Analytics via the `}<a parentName=\"p\" {...{\n        \"href\": \"/react-use-analytics-api/useAnalyticsApi\"\n      }}>{`Google Analytics Embed API`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { signOut } from \"react-use-analytics-api\";\n`}</code></pre>\n    <p>{`In your function component:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`const signOut = useSignOut(gapi);\n`}</code></pre>\n    <p>{`Provide the hook with `}<inlineCode parentName=\"p\">{`gapi`}</inlineCode>{`, the `}<a parentName=\"p\" {...{\n        \"href\": \"/react-use-analytics-api/useAnalyticsApi\"\n      }}>{`Google Analytics Embed API`}</a>{`. Call `}<inlineCode parentName=\"p\">{`signOut`}</inlineCode>{` to sign the user out.`}</p>\n    <h2 {...{\n      \"id\": \"signature\"\n    }}>{`Signature`}</h2>\n    <p><inlineCode parentName=\"p\">{`useSignOut(gapi?: GoogleAnalyticsEmbedAPI) => (() => void)`}</inlineCode></p>\n    <h3 {...{\n      \"id\": \"arguments\"\n    }}>{`Arguments`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Argument`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`gapi`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`GoogleAnalyticsEmbedAPI`}</inlineCode>{` `}{`|`}{` `}<inlineCode parentName=\"td\">{`undefined`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The `}<a parentName=\"td\" {...{\n              \"href\": \"/react-use-analytics-api/useAnalyticsApi\"\n            }}>{`Google Analytics Embed API`}</a>{`. When `}<inlineCode parentName=\"td\">{`undefined`}</inlineCode>{`, calling `}<inlineCode parentName=\"td\">{`signOut`}</inlineCode>{` does nothing.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"return\"\n    }}>{`Return`}</h3>\n    <p>{`The hook returns a function, `}<inlineCode parentName=\"p\">{`signOut`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`signOut() => void\n`}</code></pre>\n    <p>{`When `}<inlineCode parentName=\"p\">{`gapi`}</inlineCode>{` is not `}<inlineCode parentName=\"p\">{`undefined`}</inlineCode>{`, this function calls `}<a parentName=\"p\" {...{\n        \"href\": \"https://developers.google.com/analytics/devguides/reporting/embed/v1/component-reference#auth\"\n      }}><inlineCode parentName=\"a\">{`gapi.auth.signOut`}</inlineCode></a>{` to sign the user out of Google Analytics.`}</p>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import * as React from \"react\";\nimport {\n  useAnalyticsApi,\n  useAuthorize,\n  useSignOut,\n} from \"react-use-analytics-api\";\n\nexport function UseSignOutExample(props) {\n  const { ready, gapi, authorized, error } = useAnalyticsApi();\n  const authorize = useAuthorize(gapi, {\n    clientId,\n    container: \"authorize-container-id\",\n  });\n  const signOut = useSignOut(gapi);\n\n  // Workaround for API limitation\n  const [authorizeCalled, setAuthorizeCalled] = React.useState(false);\n  const authDiv = React.useRef(null);\n  const hasAuthElements =\n    authDiv.current && authDiv?.current?.children?.length > 0;\n\n  React.useEffect(() => {\n    if (ready && !error && !authorizeCalled) {\n      authorize();\n      setAuthorizeCalled(true);\n    }\n  }, [authorize, authorizeCalled, error, ready]);\n\n  return (\n    <div>\n      {!error &&\n        (ready && !!gapi ? (\n          <div>\n            {authorized && (\n              <div>\n                ‚òÄÔ∏è Logged into Google Analytics!{\" \"}\n                <button onClick={() => signOut()}>Sign Out</button>\n              </div>\n            )}\n            {!authorized && <div>üîê Not logged into Google Analytics</div>}\n            <div id=\"authorize-container-id\" ref={authDiv} />\n            {!authorized && authorizeCalled && !hasAuthElements && (\n              <div>üîÑ Refresh the page to access analytics.</div>\n            )}\n          </div>\n        ) : (\n          <div>‚åõ Loading...</div>\n        ))}\n      {error && <div>{error.toString()}</div>}\n    </div>\n  );\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}