(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{gjPA:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return c})),n.d(t,"default",(function(){return s}));var a=n("Fcif"),i=n("+I+c"),r=(n("mXGw"),n("/FXl")),o=n("TjRS"),c=(n("aD51"),{});void 0!==c&&c&&c===Object(c)&&Object.isExtensible(c)&&!c.hasOwnProperty("__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/hooks/useSignOut.mdx"}});var l={_frontmatter:c},u=o.a;function s(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(r.b)(u,Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h1",null,"useSignOut"),Object(r.b)("h2",{id:"description"},"Description"),Object(r.b)("p",null,"This hook returns a ",Object(r.b)("inlineCode",{parentName:"p"},"signOut")," function that can be used to sign the user out of Google Analytics via the ",Object(r.b)("a",{parentName:"p",href:"/react-use-analytics-api/useAnalyticsApi"},"Google Analytics Embed API"),"."),Object(r.b)("h2",{id:"usage"},"Usage"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-jsx"},'import { signOut } from "react-use-analytics-api";\n')),Object(r.b)("p",null,"In your function component:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-jsx"},"const signOut = useSignOut(gapi);\n")),Object(r.b)("p",null,"Provide the hook with ",Object(r.b)("inlineCode",{parentName:"p"},"gapi"),", the ",Object(r.b)("a",{parentName:"p",href:"/react-use-analytics-api/useAnalyticsApi"},"Google Analytics Embed API"),". Call ",Object(r.b)("inlineCode",{parentName:"p"},"signOut")," to sign the user out."),Object(r.b)("h2",{id:"signature"},"Signature"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"useSignOut(gapi?: GoogleAnalyticsEmbedAPI) => (() => void)")),Object(r.b)("h3",{id:"arguments"},"Arguments"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Argument"),Object(r.b)("th",{parentName:"tr",align:null},"Type"),Object(r.b)("th",{parentName:"tr",align:null},"Description"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"gapi"),Object(r.b)("td",{parentName:"tr",align:null},Object(r.b)("inlineCode",{parentName:"td"},"GoogleAnalyticsEmbedAPI")," ","|"," ",Object(r.b)("inlineCode",{parentName:"td"},"undefined")),Object(r.b)("td",{parentName:"tr",align:null},"The ",Object(r.b)("a",{parentName:"td",href:"/react-use-analytics-api/useAnalyticsApi"},"Google Analytics Embed API"),". When ",Object(r.b)("inlineCode",{parentName:"td"},"undefined"),", calling ",Object(r.b)("inlineCode",{parentName:"td"},"signOut")," does nothing.")))),Object(r.b)("h3",{id:"return"},"Return"),Object(r.b)("p",null,"The hook returns a function, ",Object(r.b)("inlineCode",{parentName:"p"},"signOut"),"."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-jsx"},"signOut() => void\n")),Object(r.b)("p",null,"When ",Object(r.b)("inlineCode",{parentName:"p"},"gapi")," is not ",Object(r.b)("inlineCode",{parentName:"p"},"undefined"),", this function calls ",Object(r.b)("a",{parentName:"p",href:"https://developers.google.com/analytics/devguides/reporting/embed/v1/component-reference#auth"},Object(r.b)("inlineCode",{parentName:"a"},"gapi.auth.signOut"))," to sign the user out of Google Analytics."),Object(r.b)("h2",{id:"example"},"Example"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-jsx"},'import * as React from "react";\nimport {\n  useAnalyticsApi,\n  useAuthorize,\n  useSignOut,\n} from "react-use-analytics-api";\n\nexport function UseSignOutExample(props) {\n  const { ready, gapi, authorized, error } = useAnalyticsApi();\n  const authorize = useAuthorize(gapi, {\n    clientId,\n    container: "authorize-container-id",\n  });\n  const signOut = useSignOut(gapi);\n\n  // Workaround for API limitation\n  const [authorizeCalled, setAuthorizeCalled] = React.useState(false);\n  const authDiv = React.useRef(null);\n  const hasAuthElements =\n    authDiv.current && authDiv?.current?.children?.length > 0;\n\n  React.useEffect(() => {\n    if (ready && !error && !authorizeCalled) {\n      authorize();\n      setAuthorizeCalled(true);\n    }\n  }, [authorize, authorizeCalled, error, ready]);\n\n  return (\n    <div>\n      {!error &&\n        (ready && !!gapi ? (\n          <div>\n            {authorized && (\n              <div>\n                ‚òÄÔ∏è Logged into Google Analytics!{" "}\n                <button onClick={() => signOut()}>Sign Out</button>\n              </div>\n            )}\n            {!authorized && <div>üîê Not logged into Google Analytics</div>}\n            <div id="authorize-container-id" ref={authDiv} />\n            {!authorized && authorizeCalled && !hasAuthElements && (\n              <div>üîÑ Refresh the page to access analytics.</div>\n            )}\n          </div>\n        ) : (\n          <div>‚åõ Loading...</div>\n        ))}\n      {error && <div>{error.toString()}</div>}\n    </div>\n  );\n}\n')))}void 0!==s&&s&&s===Object(s)&&Object.isExtensible(s)&&!s.hasOwnProperty("__filemeta")&&Object.defineProperty(s,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/hooks/useSignOut.mdx"}}),s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-hooks-use-sign-out-mdx-7eb7470f505e97ece089.js.map