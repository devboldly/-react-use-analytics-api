{"version":3,"sources":["webpack:///../src/hooks/useAnalyticsApi.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","style","border","padding","isMDXComponent"],"mappings":"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","file":"component---src-hooks-use-analytics-api-mdx-92b4fbab0ee01609769e.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/react-use-analytics-api/react-use-analytics-api/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { UseAnalyticsApiExample } from '../__docz__/components/UseAnalyticsApiExample';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1>useAnalyticsApi</h1>\n    <h2 {...{\n      \"id\": \"description\"\n    }}>{`Description`}</h2>\n    <p>{`Use this hook to load and access the `}<a parentName=\"p\" {...{\n        \"href\": \"https://ga-dev-tools.appspot.com/embed-api/\"\n      }}>{`Google Analytics Embed API`}</a>{` (`}<inlineCode parentName=\"p\">{`gapi`}</inlineCode>{`).`}</p>\n    <p>{`The hook will run the `}<a parentName=\"p\" {...{\n        \"href\": \"https://developers.google.com/analytics/devguides/reporting/embed/v1/getting-started#step-2\"\n      }}>{`library loading script from Google`}</a>{`, grab the API out from `}<inlineCode parentName=\"p\">{`window.gapi`}</inlineCode>{` (where Google loads it to), and store it as a singleton.\nIt will reference the singleton thereafter, keeping `}<inlineCode parentName=\"p\">{`window`}</inlineCode>{` interaction to a minimum. `}</p>\n    <p>{`State changes that happen outside of React (such as API readiness and `}<a parentName=\"p\" {...{\n        \"href\": \"/react-use-analytics-api/useAuthorize\"\n      }}>{`authorization`}</a>{`) are synchronized across all hooks via a singleton emitter effect. This allows you to use the hook in multiple places while keeping them all in sync.`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { useAnalyticsApi } from 'react-use-analytics-api';\n`}</code></pre>\n    <p>{`Then in your function component: `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`const { ready, gapi, authorized, error } = useAnalyticsApi();\n`}</code></pre>\n    <p>{`When `}<inlineCode parentName=\"p\">{`ready`}</inlineCode>{` is `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{`, the `}<inlineCode parentName=\"p\">{`gapi`}</inlineCode>{` object will be set to the loaded and ready-to-use `}<a parentName=\"p\" {...{\n        \"href\": \"https://ga-dev-tools.appspot.com/embed-api/\"\n      }}>{`Google Analytics Embed API`}</a>{`. The `}<inlineCode parentName=\"p\">{`gapi`}</inlineCode>{` object will be `}<inlineCode parentName=\"p\">{`undefined`}</inlineCode>{` until it is ready to use.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`authorized`}</inlineCode>{` property will be `}<inlineCode parentName=\"p\">{`true`}</inlineCode>{` when the user is authorized, `}<inlineCode parentName=\"p\">{`false`}</inlineCode>{` otherwise. If you authorize via the `}<a parentName=\"p\" {...{\n        \"href\": \"/react-use-analytics-api/useAuthorize\"\n      }}><inlineCode parentName=\"a\">{`useAuthorize`}</inlineCode></a>{` hook, this property will be updated for all `}<inlineCode parentName=\"p\">{`useAnalyticsApi`}</inlineCode>{` hooks. Otherwise, it will be set to the last known value when the hook was instantiated.`}</p>\n    <p>{`If something goes wrong, `}<inlineCode parentName=\"p\">{`error`}</inlineCode>{` will tell you what happened.`}</p>\n    <h3 {...{\n      \"id\": \"using-the-api-itself\"\n    }}>{`Using The API Itself`}</h3>\n    <p>{`Changes via the `}<inlineCode parentName=\"p\">{`gapi`}</inlineCode>{` API happen outside of the React ecosystem and often need to occur after rendering is completed.\nFor instance, when `}<a parentName=\"p\" {...{\n        \"href\": \"/react-use-analytics-api/useDataChart\"\n      }}>{`rendering a chart`}</a>{` via the API, content is injected directly into a DOM element. That DOM element must be fully rendered or else you'll get an error.`}</p>\n    <p>{`Therefore, any time you interact with `}<inlineCode parentName=\"p\">{`gapi`}</inlineCode>{`, it should be `}<a parentName=\"p\" {...{\n        \"href\": \"https://reactjs.org/docs/hooks-effect.html\"\n      }}>{`treated as a side-effect`}</a>{`.`}</p>\n    <p>{`This library also provides helper hooks for the API's `}<a parentName=\"p\" {...{\n        \"href\": \"https://developers.google.com/analytics/devguides/reporting/embed/v1/component-reference\"\n      }}>{`built-in components`}</a>{`:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/react-use-analytics-api/useAuthorize\"\n        }}>{`useAuthorize`}</a>{` - `}<a parentName=\"li\" {...{\n          \"href\": \"https://developers.google.com/analytics/devguides/reporting/embed/v1/component-reference#auth\"\n        }}>{`Authorize`}</a>{` the user`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/react-use-analytics-api/useViewSelector\"\n        }}>{`useViewSelector`}</a>{` - Render an Analytics `}<a parentName=\"li\" {...{\n          \"href\": \"https://developers.google.com/analytics/devguides/reporting/embed/v1/component-reference#viewselector\"\n        }}>{`ViewSelector`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/react-use-analytics-api/useDataChart\"\n        }}>{`useDataChart`}</a>{` - Render a `}<a parentName=\"li\" {...{\n          \"href\": \"https://developers.google.com/analytics/devguides/reporting/embed/v1/component-reference#datachart\"\n        }}>{`DataChart`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/react-use-analytics-api/useData\"\n        }}>{`useData`}</a>{` - Query `}<a parentName=\"li\" {...{\n          \"href\": \"https://developers.google.com/analytics/devguides/reporting/embed/v1/component-reference#data\"\n        }}>{`data`}</a>{` from the Google Analytics Core Reporting API and get back the results`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/react-use-analytics-api/useSignOut\"\n        }}>{`useSignOut`}</a>{` - Sign the user out`}</li>\n    </ul>\n    <p>{`If you need to do anything with the API outside of these operations, be sure to `}<a parentName=\"p\" {...{\n        \"href\": \"https://reactjs.org/docs/hooks-effect.html\"\n      }}>{`use an effect`}</a>{` and do cleanup where appropriate.`}</p>\n    <h2 {...{\n      \"id\": \"signature\"\n    }}>{`Signature`}</h2>\n    <p><inlineCode parentName=\"p\">{`useAnalyticsApi() => { ready: boolean; gapi?: GoogleAnalyticsEmbedAPI; authorized: boolean; error?: Error; }`}</inlineCode></p>\n    <h3 {...{\n      \"id\": \"arguments\"\n    }}>{`Arguments`}</h3>\n    <p>{`The hook takes no arguments.`}</p>\n    <h3 {...{\n      \"id\": \"return\"\n    }}>{`Return`}</h3>\n    <p>{`The hook returns an object containing:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`ready`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`true`}</inlineCode>{` when the Google Analytics Embed API is ready to use, `}<inlineCode parentName=\"td\">{`false`}</inlineCode>{` otherwise.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`gapi`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"https://developers.google.com/analytics/devguides/reporting/embed/v1\"\n            }}>{`GoogleAnalyticsEmbedAPI`}</a>{` `}{`|`}{` undefined`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The `}<a parentName=\"td\" {...{\n              \"href\": \"https://ga-dev-tools.appspot.com/embed-api/\"\n            }}>{`Google Analytics Embed API`}</a>{`. This will be `}<inlineCode parentName=\"td\">{`undefined`}</inlineCode>{` until the analytics API is fully loaded and ready.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`authorized`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`true`}</inlineCode>{` if the user is authorized, `}<inlineCode parentName=\"td\">{`false`}</inlineCode>{` otherwise. If you authorize via the `}<a parentName=\"td\" {...{\n              \"href\": \"/react-use-analytics-api/useAuthorize\"\n            }}><inlineCode parentName=\"a\">{`useAuthorize`}</inlineCode></a>{` hook, this property will be updated for all `}<inlineCode parentName=\"td\">{`useAnalyticsApi`}</inlineCode>{` hooks. Otherwise, it will be set to the last known value when the hook was instantiated.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`error`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error\"\n            }}>{`Error`}</a>{` `}{`|`}{` undefined`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`When not `}<inlineCode parentName=\"td\">{`undefined`}</inlineCode>{`, this indicates an error loading the API.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <p>{`The following demonstrates loading the Google Analytics Embed API and showing whether the user is authorized.`}</p>\n    <p>{`See the `}<a parentName=\"p\" {...{\n        \"href\": \"/react-use-analytics-api/useAuthorize#example\"\n      }}>{`useAuthorize hook example`}</a>{` to test logging in and out, and see the `}<a parentName=\"p\" {...{\n        \"href\": \"/react-use-analytics-api/useDataChart#example\"\n      }}>{`useDataChart hook example`}</a>{` for a full demo of everything this library offers.`}</p>\n    <div style={{\n      border: 'solid 2px #67788a',\n      padding: '20px'\n    }}>\n  <UseAnalyticsApiExample mdxType=\"UseAnalyticsApiExample\" />\n    </div>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import * as React from 'react';\nimport { useAnalyticsApi } from 'react-use-analytics-api';\n\nexport function UseAnalyticsApiExample() {\n  const { ready, gapi, authorized, error } = useAnalyticsApi();\n  if (error) {\n    console.error(error);\n  }\n  return (\n    <div>\n      {!error &&\n        (ready && !!gapi ? (\n          <>\n            <div>✔️ Loaded and ready to use!</div>\n            {authorized && <div>☀️ Logged into Google Analytics!</div>}\n            {!authorized && <div>🔐 Not logged into Google Analytics</div>}\n          </>\n        ) : (\n          <div>⌛ Loading...</div>\n        ))}\n      {error && (\n        <div>\n          <div style={{ fontSize: '120%' }}>❌ Error</div>\n          <hr style={{ border: 0, borderTop: 'solid 1px rosybrown' }} />\n          <p>{error.toString()}</p>\n          <p>See the console for more information.</p>\n        </div>\n      )}\n    </div>\n  );\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}