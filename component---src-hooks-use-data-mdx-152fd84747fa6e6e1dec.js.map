{"version":3,"sources":["webpack:///../src/hooks/useData.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"wPAQaA,G,UAAe,S,uMAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iCACA,kBACE,GAAM,eADR,eAGA,6CAA4B,0BAAYC,WAAW,KAAvB,WAA5B,kHACA,qHACA,kBACE,GAAM,SADR,SAGA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,gBADZ,yDAIL,oDACA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,gBADZ,uXAmBL,8CAA6B,iBAAGA,WAAW,IACvC,KAAQ,4CACP,0BAAYA,WAAW,KAAvB,SAFL,UAEoE,0BAAYA,WAAW,KAAvB,SAFpE,wBAE8I,0BAAYA,WAAW,KAAvB,aAF9I,QAE4M,0BAAYA,WAAW,KAAvB,WAF5M,MAGA,6BAAY,0BAAYA,WAAW,KAAvB,WAAZ,sBACA,kBACE,GAAM,aADR,aAGA,qBAAG,0BAAYA,WAAW,KAAvB,mJACH,kBACE,GAAM,aADR,aAGA,yBACE,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,YAGA,kBAAIA,WAAW,KACb,MAAS,MADX,QAGA,kBAAIA,WAAW,KACb,MAAS,MADX,iBAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,QAGA,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,2BAFH,YAEsF,0BAAYA,WAAW,MAAvB,cACtF,kBAAIA,WAAW,KACb,MAAS,MADX,OAEW,iBAAGA,WAAW,KACrB,KAAQ,4CADD,8BAFX,UAIkD,0BAAYA,WAAW,MAAvB,aAJlD,aAIsH,0BAAYA,WAAW,MAAvB,WAJtH,mBAMF,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,SAGA,kBAAIA,WAAW,KACb,MAAS,MACR,iBAAGA,WAAW,KACb,KAAQ,2FACP,0BAAYA,WAAW,KAAvB,WACL,kBAAIA,WAAW,KACb,MAAS,MADX,YAEgB,iBAAGA,WAAW,KAC1B,KAAQ,2FADI,SAFhB,kDAMF,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,aAGA,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,uBACH,kBAAIA,WAAW,KACb,MAAS,MADX,wDAE4D,0BAAYA,WAAW,MAAvB,YAF5D,8CAIF,kBAAIA,WAAW,SACb,kBAAIA,WAAW,KACb,MAAS,MADX,WAGA,kBAAIA,WAAW,KACb,MAAS,MACR,0BAAYA,WAAW,MAAvB,uBACH,kBAAIA,WAAW,KACb,MAAS,MADX,oIAEwI,0BAAYA,WAAW,MAAvB,0BAFxI,QAMN,kBACE,GAAM,UADR,UAGA,qDAAoC,0BAAYA,WAAW,KAAvB,WAApC,KACA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,gBADZ,wBAIL,6BAAY,0BAAYA,WAAW,KAAvB,QAAZ,WAAwE,0BAAYA,WAAW,KAAvB,aAAxE,gCAA8J,iBAAGA,WAAW,IACxK,KAAQ,2FADkJ,SAA9J,qDAEwE,iBAAGA,WAAW,IAClF,KAAQ,iGACP,0BAAYA,WAAW,KAAvB,+BAJL,KAKA,sCAAqB,0BAAYA,WAAW,KAAvB,WAArB,gBAAyF,0BAAYA,WAAW,KAAvB,aAAzF,OAAsJ,0BAAYA,WAAW,KAAvB,WAAtJ,mC,qMAKJJ,EAAWK,gBAAiB","file":"component---src-hooks-use-data-mdx-152fd84747fa6e6e1dec.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/react-use-analytics-api/react-use-analytics-api/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1>useData</h1>\n    <h2 {...{\n      \"id\": \"description\"\n    }}>{`Description`}</h2>\n    <p>{`This hook returns an `}<inlineCode parentName=\"p\">{`execute`}</inlineCode>{` function that can be used to query the Google Analytics Core Reporting API for data and get back the results.`}</p>\n    <p>{`You can use the raw data to build your own charts using a charting library of your choosing.`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { useData } from 'react-use-analytics-api';\n`}</code></pre>\n    <p>{`In your function component:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`const query = {\n  metrics: 'ga:sessions',\n  dimensions: 'ga:date',\n  'start-date': '28daysAgo',\n  'end-date': 'today',\n  ids: viewId,\n};\nconst execute = useData(\n  gapi,\n  query,\n  response => console.log('Data query response:', response),\n  response => console.error('Data query error:', response)\n);\nReact.useEffect(() => {\n  execute();\n}, [execute]);\n`}</code></pre>\n    <p>{`Provide the hook with `}<a parentName=\"p\" {...{\n        \"href\": \"/react-use-analytics-api/useAnalyticsApi\"\n      }}><inlineCode parentName=\"a\">{`gapi`}</inlineCode></a>{`, your `}<inlineCode parentName=\"p\">{`query`}</inlineCode>{`, and two callbacks: `}<inlineCode parentName=\"p\">{`onSuccess`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`onError`}</inlineCode>{`. `}</p>\n    <p>{`Call `}<inlineCode parentName=\"p\">{`execute`}</inlineCode>{` to run the query.`}</p>\n    <h2 {...{\n      \"id\": \"signature\"\n    }}>{`Signature`}</h2>\n    <p><inlineCode parentName=\"p\">{`useData = (gapi?: GoogleAnalyticsEmbedAPI, query: Query, onSuccess?: (response: any) => void, onError?: (response: any) => void): (() => void)`}</inlineCode></p>\n    <h3 {...{\n      \"id\": \"arguments\"\n    }}>{`Arguments`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Argument`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`gapi`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`GoogleAnalyticsEmbedAPI`}</inlineCode>{` `}{`|`}{` `}<inlineCode parentName=\"td\">{`undefined`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The `}<a parentName=\"td\" {...{\n              \"href\": \"/react-use-analytics-api/useAnalyticsApi\"\n            }}>{`Google Analytics Embed API`}</a>{`. When `}<inlineCode parentName=\"td\">{`undefined`}</inlineCode>{`, calling `}<inlineCode parentName=\"td\">{`useData`}</inlineCode>{` does nothing.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`query`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><a parentName=\"td\" {...{\n              \"href\": \"https://developers.google.com/analytics/devguides/reporting/core/v3/reference#q_summary\"\n            }}><inlineCode parentName=\"a\">{`Query`}</inlineCode></a></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`The data `}<a parentName=\"td\" {...{\n              \"href\": \"https://developers.google.com/analytics/devguides/reporting/core/v3/reference#q_summary\"\n            }}>{`query`}</a>{` for the Google Analytics Core Reporting API.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onSuccess`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(response) => void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Fired when the query has successfully completed. The `}<inlineCode parentName=\"td\">{`response`}</inlineCode>{` argument will contain the query results.`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`onError`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`(response) => void`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Fired when an error occurs during the query process. If you want to get the error message from the response object it will be at `}<inlineCode parentName=\"td\">{`response.error.message`}</inlineCode>{`.`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"return\"\n    }}>{`Return`}</h3>\n    <p>{`The hook returns a function, `}<inlineCode parentName=\"p\">{`execute`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`execute() => void\n`}</code></pre>\n    <p>{`When `}<inlineCode parentName=\"p\">{`gapi`}</inlineCode>{` is not `}<inlineCode parentName=\"p\">{`undefined`}</inlineCode>{`, this function executes the `}<a parentName=\"p\" {...{\n        \"href\": \"https://developers.google.com/analytics/devguides/reporting/core/v3/reference#q_summary\"\n      }}>{`query`}</a>{` to the Google Analytics Core Reporting API using `}<a parentName=\"p\" {...{\n        \"href\": \"https://developers.google.com/analytics/devguides/reporting/embed/v1/component-reference#data\"\n      }}><inlineCode parentName=\"a\">{`gapi.analytics.report.Data`}</inlineCode></a>{`.`}</p>\n    <p>{`After calling `}<inlineCode parentName=\"p\">{`execute`}</inlineCode>{`, either the `}<inlineCode parentName=\"p\">{`onSuccess`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`onError`}</inlineCode>{` callback will be called.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}